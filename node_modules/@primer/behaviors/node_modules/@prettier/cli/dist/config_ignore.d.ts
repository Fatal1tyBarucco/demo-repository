import type { Ignore } from "./types.js";
declare const getIgnoresContent: ((folderPath: string, filesNames: string[]) => Promise<string[] | undefined>) & {
    cache: Map<string, Promise<string[] | undefined>>;
};
declare const getIgnoresContentMap: (foldersPaths: string[], filesNames: string[]) => Promise<Partial<Record<string, string[]>>>;
declare const getIgnoreBy: (folderPath: string, filesContents: string[]) => Ignore;
declare const getIgnoreBys: (foldersPaths: string[], filesContents: string[][]) => Ignore | undefined;
declare const getIgnores: ((folderPath: string, filesNames: string[]) => Promise<Ignore | undefined>) & {
    cache: Map<string, Promise<Ignore | undefined>>;
};
declare const getIgnoresUp: ((folderPath: string, filesNames: string[]) => Promise<Ignore | undefined>) & {
    cache: Map<string, Promise<Ignore | undefined>>;
};
declare const getIgnoreResolved: (filePath: string, filesNames: string[]) => Promise<boolean>;
export { getIgnoresContent, getIgnoresContentMap, getIgnoreBy, getIgnoreBys, getIgnores, getIgnoresUp, getIgnoreResolved };
