import Spinner from "tiny-spinner";
import type { FunctionMaybe, LogLevel } from "./types.js";
declare class Logger {
    private pioppo;
    private levels;
    private level;
    private strength;
    constructor(level: LogLevel);
    absract: (message: FunctionMaybe<string>, strength: number) => void;
    silent: (message: FunctionMaybe<string>) => void;
    debug: (message: FunctionMaybe<string>) => void;
    log: (message: FunctionMaybe<string>) => void;
    warn: (message: FunctionMaybe<string>) => void;
    error: (message: FunctionMaybe<string>) => void;
    always: (message: FunctionMaybe<string>) => void;
    prefixed: {
        abstract: (prefix: string, message: FunctionMaybe<string>, strength: number) => void;
        silent: (message: FunctionMaybe<string>) => void;
        debug: (message: FunctionMaybe<string>) => void;
        log: (message: FunctionMaybe<string>) => void;
        warn: (message: FunctionMaybe<string>) => void;
        error: (message: FunctionMaybe<string>) => void;
        always: (message: FunctionMaybe<string>) => void;
    };
    spinner: {
        abstract: (strength: number) => Spinner | undefined;
        silent: () => Spinner | undefined;
        debug: () => Spinner | undefined;
        log: () => Spinner | undefined;
        warn: () => Spinner | undefined;
        error: () => Spinner | undefined;
        always: () => Spinner | undefined;
    };
}
export default Logger;
