declare const castArray: <T>(value: T | T[]) => T[];
declare const isBoolean: (value: unknown) => value is boolean;
declare const isNil: (value: unknown) => value is null | undefined;
declare const isOverridable: (value: unknown) => value is boolean | "" | null | undefined;
declare const setNormal: (target: any, key: string, value: any) => void;
declare const setVariadic: (target: any, key: string, value: any) => void;
declare const uniq: <T>(values: T[]) => T[];
declare const without: <T>(values: T[], value: T) => T[];
declare const zip: <T extends string, U>(keys: Set<T> | T[], value: U) => Record<T, U>;
export { castArray, isBoolean, isNil, isOverridable, setNormal, setVariadic, uniq, without, zip };
