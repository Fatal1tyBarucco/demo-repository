/* IMPORT */
import convert from './convert/parser.js';
import normalize from './normalize/parser.js';
/* MAIN */
const zeptomatch = (glob, path) => {
    const globs = Array.isArray(glob) ? glob : [glob];
    if (!globs.length)
        return false;
    const res = globs.map(zeptomatch.compile);
    const isTrailing = globs.every(glob => /(\/(?:\*\*)?|\[\/\])$/.test(glob));
    const normpath = path.replace(/[\\\/]+/g, '/').replace(/\/$/, isTrailing ? '/' : '');
    const isMatch = res.some(re => re.test(normpath));
    return isMatch;
};
/* UTILITIES */
zeptomatch.compile = (glob) => {
    return new RegExp(`^${convert(normalize(glob))}$`, 's');
};
zeptomatch.escape = (glob) => {
    return glob.replace(/(\\.)|([$.*+?!^(){}[\]\|])|(.)/gs, (_, $1, $2, $3) => $1 || $3 || `\\${$2}`);
};
/* EXPORT */
export default zeptomatch;
