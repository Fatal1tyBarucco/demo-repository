import type { PrettierConfig, PrettierConfigWithOverrides, PromiseMaybe } from "./types.js";
declare const Loaders: {
    auto: (filePath: string) => Promise<unknown>;
    js: (filePath: string) => Promise<unknown>;
    json: (filePath: string) => Promise<unknown>;
    jsonc: (filePath: string) => Promise<unknown>;
    json5: (filePath: string) => Promise<unknown>;
    package: (filePath: string) => Promise<unknown>;
    toml: (filePath: string) => Promise<unknown>;
    yaml: (filePath: string) => Promise<unknown>;
};
declare const getPrettierConfig: (folderPath: string, fileName: string) => PromiseMaybe<PrettierConfigWithOverrides | undefined>;
declare const getPrettierConfigsMap: (foldersPaths: string[], filesNames: string[]) => Promise<Partial<Record<string, PrettierConfig[]>>>;
declare const getPrettierConfigsUp: ((folderPath: string, filesNames: string[]) => Promise<PrettierConfigWithOverrides[]>) & {
    cache: Map<string, Promise<PrettierConfigWithOverrides[]>>;
};
declare const getPrettierConfigResolved: (filePath: string, filesNames: string[]) => Promise<PrettierConfig>;
export { Loaders, getPrettierConfig, getPrettierConfigsMap, getPrettierConfigsUp, getPrettierConfigResolved };
