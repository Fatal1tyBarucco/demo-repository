/* IMPORT */
import readline from 'node:readline';
/* MAIN */
class Blocker {
    /* CONSTRUCTOR */
    constructor(stream = process.stdin) {
        /* API */
        this.onKeypress = (_, key) => {
            if (key.ctrl && key.name === 'c') {
                return process.exit(0);
            }
        };
        this.isBlocked = () => {
            return this.blocked;
        };
        this.block = () => {
            return this.toggle(true);
        };
        this.unblock = () => {
            return this.toggle(false);
        };
        this.toggle = (force = !this.blocked) => {
            this.blocked = force;
            if (force) {
                if (this.stream.isTTY) {
                    this.stream.setRawMode(true);
                }
                this.interface = readline.createInterface({ input: this.stream, escapeCodeTimeout: 50 });
                readline.emitKeypressEvents(this.stream, this.interface);
                this.stream.on('keypress', this.onKeypress);
            }
            else {
                if (this.stream.isTTY) {
                    this.stream.setRawMode(false);
                }
                if (this.interface) {
                    this.interface.close();
                }
                this.stream.off('keypress', this.onKeypress);
            }
        };
        this.stream = stream;
        this.blocked = false;
    }
}
/* EXPORT */
export default Blocker;
